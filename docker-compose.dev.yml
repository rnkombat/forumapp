version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: forumapp
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d forumapp"]
      interval: 5s
      timeout: 3s
      retries: 10

  # --- 任意: Rails API（必要なときは profile 指定で起動） ---
  rails_api:
    image: ruby:3.3
    working_dir: /app
    volumes:
      - ./services/rails_api:/app
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgres://app:app@db:5432/forumapp
    command: bash -lc "bundle install && bin/rails db:prepare && bin/rails s -b 0.0.0.0 -p 3000"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3000"
    profiles: ["rails"]

  # --- 任意: Spring API（必要なときは profile 指定で起動） ---
  spring_api:
    image: gradle:8.8-jdk21
    working_dir: /home/gradle/app
    volumes:
      - ./services/spring_api:/home/gradle/app
    command: bash -lc "./gradlew bootRun --no-daemon"
    depends_on:
      db:
        condition: service_started
    ports:
      - "3002:8080"
    profiles: ["spring"]

  # --- Express API（デフォルトで使う想定） ---
  express_api:
    image: node:20
    working_dir: /app
    volumes:
      - ./services/express_api:/app
      - /app/node_modules
    environment:
      PORT: 3000
      # DB接続を.envに書いているなら不要。composeで完結させたいなら下記を有効化
      # DATABASE_URL: postgresql://app:app@db:5432/forumapp
    command: bash -lc "npm ci && npm start"
    depends_on:
      db:
        condition: service_started
    ports:
      - "3003:3000"
    profiles: ["express"]

  # --- Frontend（Vite + React/TS） ---
  frontend:
    build: ./frontend          # ← Dockerfileを使う
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app        # ソースコードをマウント
      - /app/node_modules      # node_modulesをコンテナ内に保持
    environment:
      VITE_API_BASE: http://localhost:3003
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      express_api:
        condition: service_started
    profiles: ["rails", "spring", "express"]

volumes:
  pgdata:
